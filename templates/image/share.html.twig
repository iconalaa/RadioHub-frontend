{% extends 'backrad.html.twig' %}


{%block change1%} my images{%endblock%}

{% block change1path%} {{path('app_image')}} {%endblock%}

{%block change2%}shared with me {%endblock%}
{% block change2path%} {{path('shared')}} {%endblock%}

{%block change3%}Interpretations{%endblock%}
{% block change3path%} {{path('inter')}} {%endblock%}


{%block change4%}Upload {%endblock%}
{% block change4path%} {{path('image_upload')}} {%endblock%}

{%block content%}
<style>

 #notiftoast
  {

    right: 50px;
    bottom: -100px;
    position: absolute;
  }

#toats-icon
{
background-color: #97bfe1;
    width: 30px;
    height: 30px;
    margin-right: 10px;
    border-radius: 10px;


}
</style>
<main id="main" class="main">



<!--alert toast-->
<div class="toast" role="alert" id="notiftoast" aria-live="assertive" aria-atomic="true">
  <div class="toast-header">
      <div id="toats-icon"></div>
    <strong class="me-auto">Need help </strong>
    <small class="text-body-secondary">1 mins ago</small>
    <button type="button" class="btn-close"  onclick="closeToast()"  data-bs-dismiss="toast" aria-label="Close"></button>
  </div>
  <div class="toast-body" id="toast-body"> 
    Hello, world! This is a toast message.
  </div>
</div>



<!--end-->


  <div class="pagetitle">
    <h5>Image Shared</h5>
    <nav>
      <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="{{ path('shared') }}">Shared</a></li>

      </ol>
    </nav>
  </div><!-- End Page Title -->

  <section class="section">
    <div class="row">
      <div class="card">
        <div class="card-body">
          <h5 class="card-title">Default Table</h5>

          <!-- Default Table -->
          <table class="table" id="dataTable">
            <thead>
              <tr>
                <th scope="col" hidden>#</th>
                <th scope="col">BodyPart</th>
                <th scope="col">AquisationDate</th>
                <th scope="col">Radiologist</th>

                <th style="text-align:center">Actions</th>

              </tr>
            </thead>
            <tbody>
              {% for i in images %}

              <tr>
                <th scope="row" hidden>{{i.id}}</th>

                <td> {{i.bodypart }}</td>
                <td>{{i.aquisationdate | date }}</td>
                <td>{{i.radiologist.name}}</td>

                <td style="display: flex;justify-content: center;">
                  <a href="{{ path('consult', {'id': i.id}) }}">
                    <button class="btn btn-info" style="margin-right:5px"> Consult</button>
                  </a>
                  <a href="{{ path('add_interpretation', {'id': i.id}) }}">

                    <button class="btn btn-primary" style="margin-right:5px"> intepret</button>


                  </a>



                </td>


              </tr>

              {%endfor%}


            </tbody>
          </table>
          <!-- End Default Table Example -->
        </div>
      </div>
    </div>
  </section>
</main>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<!-- Include DataTables library -->


<!-- DataTables Initialization Script -->
<script>
    document.getElementById("notiftoast").style.display="none ";
                    document.getElementById("notiftoast").style.display="none !important";

  $(document).ready(function () {
    $('#dataTable').DataTable({
      "initComplete": function (settings, json) {
        // Customize the search input field
        var searchInput = $('#dataTable_filter input[type="search"]');
        searchInput.addClass('form-control');
        searchInput.attr('placeholder', 'Search...'); // Set placeholder text
      }
    });
  });


  function refreshPopupContent(id) {


    // Make AJAX request with the fetched ID
    $.ajax({
      url: "/droit/" + id,
      type: 'GET',
      success: function (data) {
        $('#show').html(data);
      },
      error: function (error) {
        console.error('Error fetching pop-up content:', error);
      }
    });
  }
////real time call in test merge again 
  var currentUserID = "{{currectuserid | raw }}";

   const eventSource = new EventSource("{{ mercure('/test')|escape('js') }}");
        eventSource.onmessage = event => {
            console.log(JSON.parse(event.data));
            a=JSON.parse(event.data);
            var users = a.users.map(Number); // Convert elements in a.users to numbers
                document.getElementById("notiftoast").style.display="block ";


            if (a.users.includes( currentUserID))
             {
    console.log('Current user is present in the array.');
           document.getElementById("toast-body").innerText=a.rad +" has shared new Images with you ";
            // Create a new table row element
            var newRow = document.createElement('tr');
            newRow.className = 'odd'; // Add the class 'odd' to the new row

            // Create a table header cell for the sorting
            var sortingCell = document.createElement('th');
           sortingCell.setAttribute('scope', 'row');
            sortingCell.className = 'sorting_1';
            sortingCell.textContent = a.idimage; // You can adjust this value as needed
            sortingCell.style.display="none";
            newRow.appendChild(sortingCell); // Append the sorting cell to the new row

            // Create the other <td> elements with the provided parameters
            var tdContent = [
                a.bodypart
                  , // You can replace these placeholders with the actual parameters
                a.aquisition.date.split(' ')[0]+'00:00',
              a.rad
            ];

            tdContent.forEach(function(content) {
                var td = document.createElement('td');
                td.textContent = content;
                newRow.appendChild(td);
            });

            // Create the last <td> element for buttons
            var buttonTd = document.createElement('td');
            buttonTd.style.display = 'flex';
            buttonTd.style.justifyContent = 'center';

            // Add buttons to the button <td> element
            var buttons = [ 'Consult', 'Interpret']; // Button labels
            var i=0;
            buttons.forEach(function(label) {
                var button = document.createElement('button');
                button.className = 'btn btn-' + (label == 'Consult ' ? 'info' : 'primary');
                button.textContent = label;
               if (label === 'Consult') {
                       var consultLink = document.createElement('a');
                       consultLink.href = '/image/consult/'+a.idimage // Replace $id with the actual value
                                              button.classList.add("btn-info"); // Add the class "btn-info" to the button
                                              button.style.marginRight="5px";

                       consultLink.appendChild(button);

                       buttonTd.appendChild(consultLink);

                   } 
                   if (label === 'Interpret') {
                       var consultLink = document.createElement('a');
                       consultLink.href = '/interpretatin/'+a.idimage // Replace $id with the actual value
                       consultLink.appendChild(button);
                       
                       buttonTd.appendChild(consultLink);
                   }

            });

            newRow.appendChild(buttonTd); // Append the button <td> element to the new row

            // Append the new row to the table body
            var tableBody = document.querySelector('table tbody');
            tableBody.appendChild(newRow);




            }
            else
            {
              console.log("wrong user");
            }







        }





        const eventDelete = new EventSource("{{ mercure('/delete')|escape('js') }}");
        eventDelete.onmessage = event => {
            console.log(JSON.parse(event.data));
            console.log(currentUserID);
            console.log(event.data.idrad)
                document.getElementById("notiftoast").style.display="none ";

            if(JSON.parse(event.data).idrad==currentUserID)
{
            deleteimage=JSON.parse(event.data).image;



            // Find all <th> elements within the document
var thElements = document.querySelectorAll('th');

// Iterate over each <th> element
thElements.forEach(function(thElement) {
    // Check if the inner text of the <th> element is '5'
    if (thElement.innerText.trim() === deleteimage) {
        // If '5' is found, navigate to the parent <tr> element and remove it
        var rowElement = thElement.closest('tr');
        if (rowElement) {
            rowElement.remove(); // Remove the row from the DOM
        }
    }
});





        }

      }

      
function closeToast() {
    console.log("Close button clicked");
    // Add your logic to close the toast here
    // For example, if you are using Bootstrap's toast, you might do:
    var toastElement = document.querySelector('.toast'); // Adjust selector as needed
    var toast = new bootstrap.Toast(toastElement);

    document.getElementById("notiftoast").style.display="none ";

    toast.hide();
}



</script>
{% endblock %}